1. 
	la $a0, array
	lw $t0, 4($a0)
	li $t1, 5
	bne $t0, $s1, else #if a[1] == 5
		li $t0, 0
		j end # jumps to end
else: 
	subi $t0 $t0, 2 #t0 = a[1] - 2
end:
	sw $t0, 4($a0)
	
2.
#Answer
	li $a0, 17
	li $s0, 0 #counter
	li $v0, 1 #set answer to 1
loop:
	beq $a0, $s0, end #if $a0 = $s0, jump to end
	sll $v0, $v0, 1 #shift to do mult
	addi $s0, $s0, 1 #counter + 1
	j loop
	
end:

#Mine	
LoopStart:
	slt   $t0, $a0, $s1 # count < n
		beq   $t0, $zero, LoopEnd # if count > n then jump to LoopEnd
		add   $s0, $s0, $s0 # total = 2*total
		addi  $a0, $a0, 1  # count increses by 1
		j     LoopStart
LoopEnd:	
	addi $v0, $s0, 0 # put result in $v0

3:
#answer
	li $a0, 0
	li $v0, 0
loop:
	beq $a0, $zero, end #if equal to zero jump to end
		andi $t0, $a0, 1
		add $v0, $v0, $t0
		srl $a0, $a0, 1
		j loop
end:


#Mine
LoopTop:
	andi $t0, $a0, 1 # puts least sig bit in $t0
	beq $t0, $zero, LoopTop #jump to LoopTop if the least sig bit is 0
		addi $t1, $t1, 1 # add 1 to count
		srl $a0, $a0, 1 # shift one bit to the right 
	
	bne $a0, $zero, End #jump to end if the number is less than zero
	
End:	add $v0, $t1, $zero #put the count in
