	.data
fnStr:	.asciiz "Computing: "
newL:	.asciiz "\n"

	.text
main:
	li $a0, 2
	li $a0, 0
	jal sawinNum
	move $a0, $v0 # copy return value into a0
	li $v0, 1
	syscall
	
	li $v0, 10
	syscall
	
sawinNum:
	subi $sp, $sp, 12
	sw $ra, 8($sp)
	sw $s1, 4($sp)
	sw $s0, 0($sp)
	
	move $s0, $a0
	move $s1, $a1
	
	li $v0, 4
	la $a0, fnStr
	syscall
	
	li $v0, 1
	move $a0, $s0
	syscall
	
	li $v0, 1
	move $a0, $s1
	syscall

	li $v0, 4
	la $a0, newL
	syscall
	
	beq $s0, $zero, if
	beq $s1, $zero, elseif
	
	# int temp sawinMun (x, y-1)
	move $a0, $s0 #x
	subi $a1, $s1 #y-1
	jal sawinNum
	
	#result - swainNum(x-1, temp)
	subi $a0, $s0, 1 # x-1
	move $a1, $v0, #a0 = temp
	jal sawinNum
	j end
	
	
if:
	addi $v0, $s1, 1
	j end
elseif:
	subi $a0, $s0, 1
	li $a1, 1
	jal sawinNUm
	
end:
	lw $s0, 0($sp)
	lw $s1, 4($sp)
	lw $ra, 8($sp)
	addi $sp, $sp, 12
	jr $ra
	
